{"ast":null,"code":"import _classCallCheck from \"/home/ngadoan/Documents/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ngadoan/Documents/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ngadoan/Documents/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ngadoan/Documents/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ngadoan/Documents/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ngadoan/Documents/web/src/components/Analysist/career_groups_chart.js\";\nimport React, { PureComponent } from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Chip from '@material-ui/core/Chip';\nimport { Pie } from 'react-chartjs-2';\nvar ITEM_HEIGHT = 48;\nvar ITEM_PADDING_TOP = 8;\nvar MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP\n    }\n  }\n};\n\nfunction getStyles(name, that) {\n  return {\n    fontWeight: that.state.selects.indexOf(name) === -1 ? that.props.theme.typography.fontWeightRegular : that.props.theme.typography.fontWeightMedium\n  };\n}\n\nvar COLORS = ['#FF6384', '#36A2EB', '#FFCE56', '#80CBC4', '#BA68B8'];\n\nvar CareerGroupsChart =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(CareerGroupsChart, _PureComponent);\n\n  function CareerGroupsChart() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CareerGroupsChart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CareerGroupsChart)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selects: [],\n      data: {},\n      length: 5\n    };\n\n    _this.handleChange = function (event) {\n      var value = event.target.value;\n      var length = _this.state.length;\n\n      if (value.length <= length) {\n        _this.setState({\n          selects: value\n        }, function () {\n          _this.getData();\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(CareerGroupsChart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          selects = _this$state.selects,\n          length = _this$state.length;\n      fetch(\"http://127.0.0.1:5000/analysist_career_groups?career_groups=\" + selects + \"&length=\" + length, {\n        method: \"GET\"\n      }).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        var labels = [];\n        var data = [];\n        result.result.forEach(function (item) {\n          labels.push(item.career_group);\n          data.push(item.percent);\n        });\n\n        _this2.setState({\n          data: {\n            labels: labels,\n            datasets: [{\n              data: data,\n              backgroundColor: COLORS,\n              hoverBackgroundColor: COLORS\n            }]\n          }\n        });\n      });\n    }\n  }, {\n    key: \"onViewPress\",\n    value: function onViewPress() {\n      this.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          career_groups = _this$props.career_groups,\n          classes = _this$props.classes;\n      var _this$state2 = this.state,\n          selects = _this$state2.selects,\n          data = _this$state2.data;\n      return React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"select-multiple-chip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Nh\\xF3m ng\\xE0nh ngh\\u1EC1\"), React.createElement(Select, {\n        multiple: true,\n        value: selects,\n        onChange: this.handleChange,\n        input: React.createElement(Input, {\n          id: \"select-multiple-chip\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }),\n        renderValue: function renderValue(selected) {\n          return React.createElement(\"div\", {\n            className: classes.chips,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          }, selected.map(function (value) {\n            return React.createElement(Chip, {\n              key: value,\n              label: value,\n              className: classes.chip,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 104\n              },\n              __self: this\n            });\n          }));\n        },\n        MenuProps: MenuProps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, career_groups.map(function (item, index) {\n        return React.createElement(MenuItem, {\n          key: index,\n          value: item,\n          style: getStyles(item, _this3),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, item);\n      }))), React.createElement(Pie, {\n        data: data,\n        width: 250,\n        height: 250,\n        options: {\n          maintainAspectRatio: false\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CareerGroupsChart;\n}(PureComponent);\n\nCareerGroupsChart.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    formControl: {\n      margin: theme.spacing.unit,\n      minWidth: 450,\n      maxWidth: 800,\n      marginBottom: 20\n    },\n    chips: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    chip: {\n      margin: theme.spacing.unit / 4\n    },\n    noLabel: {\n      marginTop: theme.spacing.unit * 3\n    },\n    button: {\n      margin: theme.spacing.unit\n    }\n  };\n};\n\nexport default withStyles(styles, {\n  withTheme: true\n})(CareerGroupsChart);","map":{"version":3,"sources":["/home/ngadoan/Documents/web/src/components/Analysist/career_groups_chart.js"],"names":["React","PureComponent","PropTypes","withStyles","Input","InputLabel","MenuItem","FormControl","Select","Chip","Pie","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","getStyles","name","that","fontWeight","state","selects","indexOf","props","theme","typography","fontWeightRegular","fontWeightMedium","COLORS","CareerGroupsChart","data","length","handleChange","event","value","target","setState","getData","fetch","method","then","res","json","result","labels","forEach","item","push","career_group","percent","datasets","backgroundColor","hoverBackgroundColor","career_groups","classes","formControl","selected","chips","map","chip","index","maintainAspectRatio","propTypes","object","isRequired","styles","root","display","flexWrap","margin","spacing","unit","minWidth","maxWidth","marginBottom","noLabel","marginTop","button","withTheme"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Chip from '@material-ui/core/Chip';\nimport { Pie } from 'react-chartjs-2';\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\n\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        },\n    },\n};\n\nfunction getStyles(name, that) {\n    return {\n        fontWeight:\n            that.state.selects.indexOf(name) === -1\n                ? that.props.theme.typography.fontWeightRegular\n                : that.props.theme.typography.fontWeightMedium,\n    };\n}\n\nconst COLORS = ['#FF6384', '#36A2EB', '#FFCE56', '#80CBC4', '#BA68B8'];\n\nclass CareerGroupsChart extends PureComponent {\n    state = {\n        selects: [],\n        data: {},\n        length: 5\n    };\n\n    componentDidMount() {\n        this.getData()\n    }\n\n    getData() {\n        const { selects, length } = this.state\n        fetch(\"http://127.0.0.1:5000/analysist_career_groups?career_groups=\" + selects + \"&length=\" + length, {\n            method: \"GET\"\n        })\n            .then(res => res.json())\n            .then(result => {\n                var labels = []\n                var data = []\n                result.result.forEach(item => {\n                    labels.push(item.career_group)\n                    data.push(item.percent)\n                })\n                this.setState({\n                    data: {\n                        labels: labels,\n                        datasets: [{\n                            data: data,\n                            backgroundColor: COLORS,\n                            hoverBackgroundColor: COLORS\n                        }]\n                    }\n                })\n\n            });\n    }\n\n    handleChange = event => {\n        const { value } = event.target\n        const {length} = this.state\n        if (value.length <= length) {\n            this.setState({ \n                selects: value \n            },() => {\n                this.getData()\n            });\n        }\n    };\n\n    onViewPress() {\n        this.getData()\n    }\n\n    render() {\n        const { career_groups, classes } = this.props\n        const { selects, data } = this.state\n        return (\n            <center>\n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor=\"select-multiple-chip\">Nhóm ngành nghề</InputLabel>\n                    <Select\n                        multiple\n                        value={selects}\n                        onChange={this.handleChange}\n                        input={<Input id=\"select-multiple-chip\" />}\n                        renderValue={selected => (\n                            <div className={classes.chips}>\n                                {selected.map(value => (\n                                    <Chip key={value} label={value} className={classes.chip} />\n                                ))}\n                            </div>\n                        )}\n                        MenuProps={MenuProps}\n                    >\n                        {career_groups.map((item, index) => (\n                            <MenuItem key={index} value={item} style={getStyles(item, this)}>\n                                {item}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n\n                <Pie\n                    data={data}\n                    width={250}\n                    height={250}\n                    options={{ maintainAspectRatio: false }} />\n            </center>\n\n        )\n    }\n}\n\nCareerGroupsChart.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    formControl: {\n        margin: theme.spacing.unit,\n        minWidth: 450,\n        maxWidth: 800,\n        marginBottom: 20\n    },\n    chips: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        margin: theme.spacing.unit / 4,\n    },\n    noLabel: {\n        marginTop: theme.spacing.unit * 3,\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n});\n\n\nexport default withStyles(styles, { withTheme: true })(CareerGroupsChart);"]},"metadata":{},"sourceType":"module"}